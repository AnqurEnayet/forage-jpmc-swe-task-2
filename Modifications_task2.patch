From 796aea717ad63a87f90031dab037015e388760c0 Mon Sep 17 00:00:00 2001
From: Md Enayetullah Anqur <enayetullah@iut-dhaka.edu>
Date: Thu, 13 Jul 2023 00:26:15 +0600
Subject: [PATCH] Changed App.tsx and Graph.tsx according to the given
 instructions

---
 package-lock.json |  1 +
 package.json      |  7 ++++++-
 src/App.tsx       | 24 +++++++++++++++++++-----
 src/Graph.tsx     | 15 ++++++++++-----
 4 files changed, 36 insertions(+), 11 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index 21b4315..9b85d2c 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -7,6 +7,7 @@
     "": {
       "name": "bank-merge-co-task-2",
       "version": "0.1.0",
+      "license": "ISC",
       "dependencies": {
         "@finos/perspective": "^1.6.2",
         "@finos/perspective-viewer": "^1.6.2",
diff --git a/package.json b/package.json
index ca234e9..ad781ff 100644
--- a/package.json
+++ b/package.json
@@ -36,5 +36,10 @@
     "awesome-typescript-loader": "^5.2.1",
     "source-map-loader": "^0.2.4",
     "typescript": "^3.2.4"
-  }
+  },
+  "description": "Starter repo for task 2 of JPMC's Forage program",
+  "main": "index.js",
+  "keywords": [],
+  "author": "",
+  "license": "ISC"
 }
diff --git a/src/App.tsx b/src/App.tsx
index 0728518..10149a7 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,18 +31,30 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+    if(this.state.showGraph)
     return (<Graph data={this.state.data}/>)
   }
 
   /**
    * Get new data from server and update the state with the new data
+   * Update the state by creating a new array of data that consists of
+   * Previous data in the state and the new data from server
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    let x = 0;
+    const interval = setInterval(() => {
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+        this.setState({ 
+          data: serverResponds,
+          showGraph: true, 
+        });
+      });
+      x++;
+      if(x>1000){
+        clearInterval(interval);
+      }
+    }, 100);
+    
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..76df027 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -41,14 +41,19 @@ class Graph extends Component<IProps, {}> {
       timestamp: 'date',
     };
 
-    if (window.perspective && window.perspective.worker()) {
+    if (window.perspective) {
       this.table = window.perspective.worker().table(schema);
     }
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
-
-      // Add more Perspective configurations here.
       elem.load(this.table);
+      // Add more Perspective configurations here.
+      elem.setAttribute('view', 'y_line');
+      elem.setAttribute('column-pivots', '["stock"]');
+      elem.setAttribute('row-pivots', '["timestamp"]');
+      elem.setAttribute('columns', '["top_ask_price]');
+      elem.setAttribute('aggregates',`{"stock":"distinct count","top_ask_price":"avg","top_bid_price":"avg","timestamp":"distinct count"}`);
+
     }
   }
 
-- 
2.41.0.windows.1

